name: plugins

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  BOOTSTRAP_VERSION: 1
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1
  PLUGINS_BASE: abgate artyfx caps die-plugins fomp mda
  PLUGINS_CROSS: blop dpf-plugins
  PLUGINS_DISTRHO_PORTS: distrho-ports-arctican distrho-ports-drowaudio distrho-ports-tal-plugins
#distrho-ports-dexed
#distrho-ports-klangfalter
#distrho-ports-luftikus
#distrho-ports-obxd
#distrho-ports-pitched-delay
#distrho-ports-refine
#distrho-ports-swankyamp
#distrho-ports-temper
#distrho-ports-vex
#distrho-ports-vitalium
#distrho-ports-wolpertinger

jobs:
  # linux native build
  linux:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/debs
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: cache-linux
    - name: Restore debian package cache
      run: |
        if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
          sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
        fi
    - name: Set up repositories
      run: |
        sudo add-apt-repository -y ppa:kxstudio-debian/kxstudio && \
        sudo add-apt-repository -y ppa:kxstudio-debian/toolchain && \
        sudo apt-get update -qq && \
        sudo apt-get install -y kxstudio-repos && \
        sudo apt-get update -qq
    - name: Set up dependencies
      run: |
        sudo apt-get install -yq build-essential curl cmake jq meson \
          libglib2.0-dev
    - name: Cache debian packages
      run: |
        mkdir -p ~/PawPawBuilds/debs && \
        sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
    - name: Bootstrap Linux native
      shell: bash
      run: |
        ./bootstrap-plugins.sh linux && ./.cleanup.sh linux
    - name: Build Linux native
      shell: bash
      run: |
        ./build-plugins.sh linux ${PLUGINS_BASE} ${PLUGINS_CROSS} && ./.cleanup.sh linux

  # macOS native intel build
  macos:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: cache-macos
    - name: Set up dependencies
      run: |
        brew install cmake jq meson
    - name: Bootstrap macOS intel
      shell: bash
      run: |
        ./bootstrap-plugins.sh macos && ./.cleanup.sh macos
    - name: Build macOS intel
      shell: bash
      run: |
        ./build-plugins.sh macos ${PLUGINS_BASE} ${PLUGINS_CROSS} ${PLUGINS_DISTRHO_PORTS} && ./.cleanup.sh macos
    - uses: actions/upload-artifact@v2
      with:
        name: macOS intel package
        path: setup/macos/PawPaw-*.pkg

  # linux with macOS cross-compilation
  macos_old:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/debs
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: cache-macos-old
    - name: Restore debian packages cache
      run: |
        if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
          sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
        fi
    - name: Set up repositories
      run: |
        sudo add-apt-repository -y ppa:kxstudio-debian/kxstudio && \
        sudo add-apt-repository -y ppa:kxstudio-debian/toolchain && \
        sudo apt-get update -qq && \
        sudo apt-get install -y kxstudio-repos && \
        sudo apt-get update -qq
    - name: Set up dependencies
      run: |
        sudo apt-get install -y build-essential curl cmake jq meson
    - name: Set up cross-compiler
      run: |
        mkdir -p ~/PawPawBuilds/debs && \
        cd ~/PawPawBuilds/debs && \
        if [ ! -f 'apple-uni-sdk-10.5_20110407-0.flosoft1_amd64.deb' ]; then \
          wget -c 'https://launchpad.net/~kxstudio-debian/+archive/ubuntu/toolchain/+files/apple-uni-sdk-10.5_20110407-0.flosoft1_amd64.deb'; \
        fi && \
        if [ ! -f 'apple-x86-odcctools_758.159-0kxstudio2_amd64.deb' ]; then \
          wget -c 'https://launchpad.net/~kxstudio-debian/+archive/ubuntu/toolchain/+files/apple-x86-odcctools_758.159-0kxstudio2_amd64.deb'; \
        fi && \
        if [ ! -f 'apple-x86-gcc_4.2.1~5646-1kxstudio2_amd64.deb' ]; then \
          wget -c 'https://launchpad.net/~kxstudio-debian/+archive/ubuntu/toolchain/+files/apple-x86-gcc_4.2.1~5646-1kxstudio2_amd64.deb'; \
        fi && \
        sudo dpkg -i \
          'apple-uni-sdk-10.5_20110407-0.flosoft1_amd64.deb' \
          'apple-x86-odcctools_758.159-0kxstudio2_amd64.deb' \
          'apple-x86-gcc_4.2.1~5646-1kxstudio2_amd64.deb'
    - name: Cache debian packages
      run: |
        sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
    - name: Bootstrap macOS cross-compiled
      shell: bash
      run: |
        ./bootstrap-plugins.sh macos-old && ./.cleanup.sh macos-old
    - name: Build macOS cross-compiled
      shell: bash
      run: |
        ./build-plugins.sh macos-old ${PLUGINS_BASE} && ./.cleanup.sh macos-old

  # macOS native universal build
  macos_universal:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: cache-macos-universal
    - name: Set up dependencies
      run: |
        brew install cmake jq meson
    - name: Fix up Xcode
      run: |
        sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
        sudo xcode-select -s "/Applications/Xcode_12.3.app"
    - name: Bootstrap macOS universal
      shell: bash
      run: |
        ./bootstrap-plugins.sh macos-universal && ./.cleanup.sh macos-universal
    - name: Build macOS universal
      shell: bash
      run: |
        ./build-plugins.sh macos-universal ${PLUGINS_BASE} ${PLUGINS_CROSS} ${PLUGINS_DISTRHO_PORTS} && ./.cleanup.sh macos-universal
    - uses: actions/upload-artifact@v2
      with:
        name: macOS universal package
        path: setup/macos/PawPaw-*.pkg

  # linux with win64 cross-compilation
  win64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: |
          ~/PawPawBuilds/builds
          ~/PawPawBuilds/debs
          ~/PawPawBuilds/downloads
          ~/PawPawBuilds/targets
        key: cache-win64
    - name: Restore debian packages cache
      run: |
        if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
          sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
        fi
    - name: Set up repositories
      run: |
        wget -qO- https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add - && \
        sudo dpkg --add-architecture i386 && \
        sudo add-apt-repository -y ppa:kxstudio-debian/kxstudio && \
        sudo add-apt-repository -y ppa:kxstudio-debian/toolchain && \
        sudo add-apt-repository -y ppa:kxstudio-debian/ubuntus && \
        sudo apt-add-repository -y 'deb https://dl.winehq.org/wine-builds/ubuntu/ bionic main' && \
        sudo apt-get update -qq && \
        sudo apt-get install -y kxstudio-repos && \
        sudo apt-get update -qq
    - name: Set up dependencies
      run: |
        sudo apt-get install -y build-essential curl cmake jq meson \
          mingw-w64 binfmt-support binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 winehq-stable
    - name: Cache debian packages
      run: |
        mkdir -p ~/PawPawBuilds/debs && \
        sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
    - name: Bootstrap win64 cross-compiled
      shell: bash
      run: |
        ./bootstrap-plugins.sh win64 && ./.cleanup.sh win64
    - name: Build win64 cross-compiled
      shell: bash
      run: |
        ./build-plugins.sh win64 ${PLUGINS_BASE} ${PLUGINS_CROSS} ${PLUGINS_DISTRHO_PORTS} && ./.cleanup.sh win64
    - uses: actions/upload-artifact@v2
      with:
        name: win64 installer
        path: setup/inno/PawPaw-*.exe
