name: bootstrap

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
env:
  CACHE_VERSION: 5
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1
  PAWPAW_SKIP_LTO: 1

jobs:
  common:
    strategy:
      matrix:
        include:
          - name: linux
            installer: apt
            os: ubuntu-20.04
            target: linux
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: common-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-common.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}
      - name: Pack bootstrap build
        shell: bash
        run: |
          tar -C ~/PawPawBuilds -czf common-${{ matrix.target }}.tar.gz builds targets
      - uses: actions/upload-artifact@v2
        with:
          name: common-${{ matrix.target }}
          path: common-${{ matrix.target }}.tar.gz

  cardinal:
    strategy:
      matrix:
        include:
          - name: linux
            installer: apt
            os: ubuntu-20.04
            target: linux
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: cardinal-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-cardinal.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}

  plugins:
    strategy:
      matrix:
        include:
          - name: linux
            installer: apt
            os: ubuntu-20.04
            target: linux
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    needs: common
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: plugins-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Download common-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: common-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Extract common-${{ matrix.target }}
        shell: bash
        run: |
            cd ~/PawPawBuilds && \
            tar xf common-${{ matrix.target }}.tar.gz
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-plugins.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}
      - name: Pack bootstrap build
        shell: bash
        run: |
          tar -C ~/PawPawBuilds -czf plugins-${{ matrix.target }}.tar.gz builds targets
      - uses: actions/upload-artifact@v2
        with:
          name: plugins-${{ matrix.target }}
          path: plugins-${{ matrix.target }}.tar.gz

  jack2:
    strategy:
      matrix:
        include:
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    needs: common
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: jack2-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Download common-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: common-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Extract common-${{ matrix.target }}
        shell: bash
        run: |
            cd ~/PawPawBuilds && \
            tar xf common-${{ matrix.target }}.tar.gz
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-jack2.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}
      - name: Pack bootstrap build
        shell: bash
        run: |
          tar -C ~/PawPawBuilds -czf jack2-${{ matrix.target }}.tar.gz builds targets
      - uses: actions/upload-artifact@v2
        with:
          name: jack2-${{ matrix.target }}
          path: jack2-${{ matrix.target }}.tar.gz

  qt:
    strategy:
      matrix:
        include:
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    needs: common
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: qt-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Download common-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: common-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Extract common-${{ matrix.target }}
        shell: bash
        run: |
            cd ~/PawPawBuilds && \
            tar xf common-${{ matrix.target }}.tar.gz
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-qt.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}
      - name: Pack bootstrap build
        shell: bash
        run: |
          tar -C ~/PawPawBuilds -czf qt-${{ matrix.target }}.tar.gz builds targets
      - uses: actions/upload-artifact@v2
        with:
          name: qt-${{ matrix.target }}
          path: qt-${{ matrix.target }}.tar.gz

  carla:
    strategy:
      matrix:
        include:
          - name: macos
            installer: homebrew
            os: macos-10.15
            target: macos
          - name: macos-universal
            installer: homebrew
            os: macos-10.15
            target: macos-universal
          - name: win32
            installer: apt
            os: ubuntu-20.04
            target: win32
          - name: win64
            installer: apt
            os: ubuntu-20.04
            target: win64
    runs-on: ${{ matrix.os }}
    needs: [plugins, qt]
    steps:
      - uses: actions/checkout@v2
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: |
            ~/PawPawBuilds
          key: carla-${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: (apt) Restore debian package cache
        if: ${{ matrix.installer == 'apt' }}
        run: |
          if [ -d ~/PawPawBuilds/debs ] && [ "$(ls ~/PawPawBuilds/debs | wc -l)" -ne 0 ]; then \
            sudo cp ~/PawPawBuilds/debs/*.deb /var/cache/apt/archives/; \
          fi
      - name: (apt) Fix GitHub's mess
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: (apt) Set up dependencies (apt)
        if: ${{ matrix.installer == 'apt' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq autopoint build-essential curl cmake jq meson
          # extra, for using system libraries
          if [ '${{ matrix.target }}' == 'linux' ]; then \
            sudo apt-get install -yqq libdbus-1-dev libgl1-mesa-dev libglib2.0-dev libx11-dev libxcursor-dev libxext-dev libxrandr-dev; \
          fi
          # extra, for win32
          if [ '${{ matrix.target }}' == 'win32' ]; then \
            sudo dpkg --add-architecture i386; \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 mingw-w64 wine-stable:i386; \
          fi
          # extra, for win64
          if [ '${{ matrix.target }}' == 'win64' ]; then \
            sudo apt-get update -qq; \
            sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable; \
          fi
      - name: (homebrew) Set up dependencies
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          brew install cmake jq meson
      - name: (homebrew) Fix up Xcode
        if: ${{ matrix.installer == 'homebrew' }}
        run: |
          sudo rm -Rf /Library/Developer/CommandLineTools/SDKs/*
          sudo xcode-select -s "/Applications/Xcode_12.3.app"
      - name: (apt) Cache debian packages
        if: ${{ matrix.installer == 'apt' }}
        run: |
            mkdir -p ~/PawPawBuilds/debs
            sudo mv /var/cache/apt/archives/*.deb ~/PawPawBuilds/debs/
      - name: Download common-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: common-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Download qt-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: qt-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Download plugins-${{ matrix.target }}
        uses: actions/download-artifact@v2
        with:
          name: plugins-${{ matrix.target }}
          path: ~/PawPawBuilds
      - name: Extract {common,plugins,qt}-${{ matrix.target }}
        shell: bash
        run: |
            cd ~/PawPawBuilds && \
            tar xf common-${{ matrix.target }}.tar.gz && \
            tar xf plugins-${{ matrix.target }}.tar.gz && \
            tar xf qt-${{ matrix.target }}.tar.gz
      - name: Run bootstrap
        shell: bash
        run: |
          ./bootstrap-carla.sh ${{ matrix.target }} && ./.cleanup.sh ${{ matrix.target }}
